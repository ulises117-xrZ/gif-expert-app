{"version":3,"sources":["Components/AddCategory.jsx","helpers/getGifs.js","Components/GifGridItem.jsx","Components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","cats","alert","handleSubmit","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","setcategories","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAEaA,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cACzB,GADwD,EAAhBC,WACJC,mBAAS,KAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACI,sBAAMC,SAAU,SAACC,GAAD,OAVC,SAACA,GAClBA,EAAEC,iBACEJ,EAAWK,QAIfR,GAAe,SAAAS,GAAI,OAAMN,GAAN,mBAAqBM,OACxCL,EAAc,KAJVM,MAAM,WAOaC,CAAaL,IAApC,SACI,uBACIM,KAAK,OACLC,MAAOV,EACPW,SAAU,SAACR,GACPF,EAAcE,EAAES,OAAOF,a,+BCnB9BG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEGI,MAAMF,GAFT,cAEdG,EAFc,gBAGGA,EAASC,OAHZ,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAXQ,kBAYbA,GAZa,4CAAH,sDCERS,EAAc,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCDHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECCwB,SAACA,GACzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDlByBK,CAAa5B,GAA/B2B,EAAd,EAAQpB,KAAYe,EAApB,EAAoBA,QAIpB,OACI,qCACI,oBAAIJ,UAAU,mCAAd,SAAkDlB,IAE9CsB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEf,qBAAKA,UAAU,YAAf,SAGQS,EAAKlB,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aElBtB,SAASkB,IACpB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAOD,EAAP,KAAmB8C,EAAnB,KAEA,OACI,gCACI,8CAGA,cAAC,EAAD,CAAa/C,cAAe+C,IAC5B,uBACA,6BAEQ9C,EAAWyB,KAAI,SAAAsB,GAAI,OACf,cAAC,EAAD,CAEI/B,SAAU+B,GADLA,W,MCZjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACL,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.73dc4050.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories, categories}) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!inputValue.trim()){\r\n            alert(\"no data\");\r\n            return;\r\n        }\r\n        setCategories( cats => [ inputValue ,...cats ]);\r\n        setInputValue(\"\");\r\n    };\r\n    return (\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => {\r\n                    setInputValue(e.target.value);\r\n                }}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fYWL3cquL4heucAcM7D9cKWDRfKJUjU8`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className='card animate__animated animate__pulse '>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: imgs, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__pulse'>{category}</h3>\r\n            {\r\n                loading && <p className='animate__animated animate__flash'>Loading...</p>\r\n            }\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    imgs.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {\r\n    useEffect,\r\n    useState\r\n} from \"react\"\r\nimport {\r\n    getGifts\r\n} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport default function GifExpertApp() {\r\n    const [categories, setcategories] = useState([\"One Punch\"]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>\r\n                GifExpertApp\r\n            </h2>\r\n            <AddCategory setCategories={setcategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(item =>\r\n                        <GifGrid\r\n                            key={item}\r\n                            category={item} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}